<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://blog2.karottc.com/</id>
  <title>杂思未济</title>
  <updated>2017-05-25T12:26:17Z</updated>
  <link rel="alternate" href="http://blog2.karottc.com/"/>
  <link rel="self" href="http://blog2.karottc.com/atom.xml"/>
  <author>
    <name>karottc</name>
    <uri>http://blog2.karottc.com</uri>
  </author>
  <entry>
    <id>tag:blog2.karottc.com,2017-08-25:/posts/2017-08-25-play-king-of-glory-9-months/</id>
    <title type="html">我玩王者荣耀这九个月</title>
    <published>2017-08-25T12:26:17Z</published>
    <updated>2017-05-25T12:26:17Z</updated>
    <link rel="alternate" href="http://blog2.karottc.com/posts/2017-08-25-play-king-of-glory-9-months/"/>
    <content type="html">&lt;p&gt;从去年12月份（准确的时间是：2016.12.01）开始玩王者荣耀，到现在也差不多9个月了，从最开始的狂热，到现在淡漠。所以今天就来回顾一下，谈谈得失，梳理一下心路历程的变化。&lt;/p&gt;
&lt;figure&gt;
&lt;img src="/static/images/2017/20170825_game_01.JPG" alt="最高段位" /&gt;&lt;figcaption&gt;最高段位&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;h2 id="入坑"&gt;入坑&lt;/h2&gt;
&lt;p&gt;都过去九个月了，已经不记得当时是由于什么原因开始玩这个游戏了，只记得在一个黄昏，下载了游戏，然后趁着吃晚饭的时间，过完了新手教程，然后买了两个英雄开始玩，当时前一周依然不不会玩（比如不知道应该走哪条线，不看小图等等），都是瞎玩，这种状态下每天都玩了好几局，现在回过头看，也没想通当时哪里来的动力玩这么多，因为完全是抓瞎状态，也体会不到游戏的乐趣才是。&lt;/p&gt;
&lt;p&gt;后面开始学习玩这个游戏的基本法，学习每个位置/英雄要走什么路线，应该是什么样的套路，看了很多攻略，看了很多直播，关注了很多人玩。逐渐的自己也上道了。&lt;/p&gt;
&lt;p&gt;这大概是4个月之后了，也就是前4个月，大概平均每天玩了10场，看到这个数字的时候，我自己也惊呆了，以场均20分钟来算，也是200分钟，也就是整整3个多小时，把我吓得眼泪都横着流了。&lt;/p&gt;
&lt;h2 id="挣扎"&gt;挣扎&lt;/h2&gt;
&lt;p&gt;本以为自己会玩之后就能很快的上到王者了，一段时间之后，发现自己还是太天真，这个游戏的设计就是让你的胜率在50%，无论你会不会玩，胜率都是在50%，除非你真的是1打九的大神，因为看很多主播和职业选手，单排也时常翻车。&lt;/p&gt;
&lt;p&gt;然而我当然不会就此认命，我依然在不停的看攻略-&amp;gt;实践-&amp;gt;排位-&amp;gt;看攻略这个循环中，依然相信，可以靠实力达到最高段位。这样又持续了三四个月，中间还横跨了一个赛季，而我的胜率始终在52%左右，输输赢赢，段位始终还是上不去。然后我放弃了，在某个深夜打了游戏，被队友弄得一肚子火气的时候，突然就放弃了。&lt;/p&gt;
&lt;p&gt;现在我依然相信自己进行上面那个循环可以达到最高段位，只是我现在并不愿意花这个时间了。回想自己当时玩这个游戏的初衷，只是为了社交，没料到自己却沉迷了，以为现在的技术水平（任何位置都能玩，有意识、有技术，虽然不是顶级，但是也够用了），应付社交足够了，既然目的已经达到，是时候退场换去干点别的了，比如年初的计划，到现在依然是一片空白。&lt;/p&gt;
&lt;h2 id="反思"&gt;反思&lt;/h2&gt;
&lt;p&gt;玩游戏这个几个月然我看到自己的意志力其实不值一提（以前还以为自己的意志力还可以），以前看到书上说意志力一样很耗体力，如果你在别的地方消耗了你的意志力，在另一个地方你的意志力会减弱，此言不虚啊。如果不是游戏的这种策略，反复的折腾你，还让你上不去段位，我估计还沉迷在游戏中，由于反复的被折腾，愤怒值达到顶点，然后放弃了这个所谓的全民游戏，还是应该好好感谢一下吧。&lt;/p&gt;
&lt;p&gt;这之后开始思考，这个游戏是什么原因让人沉迷和上瘾的，看了很多的分析，看了一本书《上瘾五百年》，还是没有找到让自己不上瘾的办法，真是那句——道理我都懂，就是做不到吧。&lt;/p&gt;
&lt;p&gt;不玩游戏之后，我发现时间多了起来，然后发现已经很久没有写过东西，那就从这篇开始，恢复状态吧。&lt;/p&gt;
&lt;h4 id="footnotes"&gt;Footnotes&lt;/h4&gt;
&lt;p&gt;题图就是我玩这个游戏达到的最高段位了。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:blog2.karottc.com,2014-11-30:/posts/2014-11-30-prevent-douban-ad/</id>
    <title type="html">去除豆瓣广告</title>
    <published>2014-11-30T12:26:17Z</published>
    <updated>2014-11-30T12:26:17Z</updated>
    <link rel="alternate" href="http://blog2.karottc.com/posts/2014-11-30-prevent-douban-ad/"/>
    <content type="html">&lt;p&gt;偶然发现一个可以去除豆瓣广告的方法，下面先看豆瓣主页的两处广告：&lt;br /&gt; &lt;img src="/static/images/201406/20141130_douban1.png" /&gt; &lt;img src="/static/images/201406/20141130_douban2.png" alt="豆瓣广告" /&gt;&lt;/p&gt;
&lt;p&gt;把鼠标放在广告上的时候，浏览器下面就能看到链接的地址信息，同时，如果点看网页的源码，也可以更明显看到广告加载的信息，如下图&lt;br/&gt; &lt;img src="/static/images/201406/20141130_douban3.png" alt="豆瓣广告源码" /&gt; 上面的图中都有一个 &lt;code&gt;http://erebor.douban.com/&lt;/code&gt; 的网址，所以去除广告的方法就很简单了，只要把 &lt;code&gt;erebor.douban.com&lt;/code&gt; 这个域名重定向到本地（即 &lt;code&gt;127.0.0.1&lt;/code&gt;）就搞定&lt;sup&gt;&lt;a href="#fn:1" name="fnref:1"&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;在hosts的文件中加入如下代码就OK:&lt;br/&gt; &lt;img src="/static/images/201406/20141130_douban4.png" alt="hosts文件" /&gt; 这个文件的在 &lt;em&gt;Mac OS X&lt;/em&gt; 系统的路径为：&lt;code&gt;/private/etc/hosts&lt;/code&gt;, windows系统也在etc目录下。&lt;/p&gt;
&lt;p&gt;2014.11.30 10:58&lt;/p&gt;
&lt;h4 id="footnotes"&gt;Footnotes:&lt;/h4&gt;
&lt;p&gt;&lt;sup&gt;&lt;a href="#fnref:1" name="fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt; 从网页源码看来，豆瓣的前端不错，至少代码看起来挺整齐的，不像其他一些网站，那代码简直就不是人看的。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:blog2.karottc.com,2014-09-19:/posts/2014-09-19-two-world-edge/</id>
    <title type="html">【书摘】站在两个世界的边缘</title>
    <published>2014-09-19T12:26:17Z</published>
    <updated>2014-09-19T12:26:17Z</updated>
    <link rel="alternate" href="http://blog2.karottc.com/posts/2014-09-19-two-world-edge/"/>
    <content type="html">&lt;figure&gt;
&lt;img src="/static/images/201406/20140919_world_edge.png" alt="站在两个世界的边缘" /&gt;&lt;figcaption&gt;站在两个世界的边缘&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;本文是&lt;a href="http://book.douban.com/subject/25735727/"&gt;《站在两个世界的边缘》&lt;/a&gt;&lt;sup&gt;&lt;a href="#fn:1" name="fnref:1"&gt;1&lt;/a&gt;&lt;/sup&gt;的一些书摘： &amp;gt; 纵然你是一代天骄，坐拥天下，到头来不过化作一抔黄土； &amp;gt; &amp;gt; 纵然你是绝代佳人，艳冠群芳，到头来不过是一具白骨。 &amp;gt; &amp;gt; 但是，难道因为死亡是人生的终点，我们就要放弃生命的过程吗？ &amp;gt; &amp;gt; ——程浩&lt;/p&gt;
&lt;h3 id="写在阅读之前"&gt;写在阅读之前&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;在其诸多散杂的文字中，有一份2013的年度计划清单：&lt;/p&gt;
&lt;p&gt;1、阅读10部关于西方哲学的著作&lt;/p&gt;
&lt;p&gt;2、阅读儒、墨、道、法等学派的主要著作&lt;/p&gt;
&lt;p&gt;3、阅读各类畅销书50部&lt;/p&gt;
&lt;p&gt;4、学习新概念英语全四册&lt;/p&gt;
&lt;p&gt;5、学习英语500小时（共1000小时）&lt;/p&gt;
&lt;p&gt;6、写下50份读书笔记+思维导图&lt;/p&gt;
&lt;p&gt;7、写下50部短篇小说&lt;/p&gt;
&lt;p&gt;8、写下一部长篇小说&lt;/p&gt;
&lt;p&gt;……&lt;/p&gt;
&lt;p&gt;他让我们感受到生命的力量。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="世界上最强的少年"&gt;世界上最强的少年&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;有两种层面的活着，一种是单纯生命的延续，是再多一轮的心跳与呼吸，再多吃一口饭，多睡一觉，并且醒来；另一种层面的活着，是像一个活人一样活下去。&lt;/p&gt;
&lt;p&gt;这就是电影《1942》与小说《活着》的区别。前者只是要活下来，受尽凌辱也要活着。后者是不仅活着，还要笑着活下来——哪怕是苦笑，不仅活着，还不时要和命运开个粗鲁的玩笑。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="怀念程浩"&gt;怀念程浩&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;在医院当他喊妈妈“我想回家”时，我就决定：既然我把他生下来，我就要把他养大。老天夺走他多少，我就用爱来弥补他多少。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="世间慨"&gt;世间慨&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;活着，是每个人的希望；活得好，是每个人的欲望。这是每个活着的人（无论健康与否）都应该做到的。&lt;br /&gt;&lt;br /&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;只有吸满阳光的眼睛，才能照亮世界。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;记得有人说过：“世界上最难过的事情，莫过于多年以后，我们彼此发现对方都已经改变。”这真是一句漂亮的蠢话，最难过的事情从来都不是“彼此的改变”，而是所有人都在改变，只有你还一成不变.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;许多年以后我才明白，人生可以是一杯水，也可以是一片海，关键是看一个人的内心。心是大海，便能包容缺憾，同化污秽，永远保持自身的通透明净。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;这世界，不是每个人都有机会做自己想做的事情，但是我们应该尽量去做那些正确的事情。纵使不能抵挡黑夜的来临，我们也要站在星空下仰望光明。&lt;/p&gt;
&lt;p&gt;不必可怜谁，不必同情谁。所谓生活，不过就是一种“昂着头的艺术”，仅此而已。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;可能你永远也找不到一颗黄豆大小的珍珠，但是你知道——贝壳里面有珍珠，不是这一个就是下一个。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;但是，他的这段经历，却一直让我记忆犹新：一个男生，可以不帅，可以不念书，可以没钱，可以不善言谈，但是一定要对自己所钟爱的事业认真！否则，你的一生也就这样了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;因为对人对事的认真程度，直接决定了你对其投入的时间、精力和感情的多与少；对工作的认真程度，决定了经济与物质；对感情（亲情、友情、爱情）的认真程度，决定了人际关系；对爱好的认真程度，决定了层次和趣味。还有很多类似的例子，不胜枚举。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;我就会发现自己所在的城堡，原来不过是一座囚禁思念的地牢。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;分离，既是落下的帷幕，亦是相遇时的序曲。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;其实我知道，自己不是一个爱读书的人，只是缺少一个不读的理由。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;站在时间的制高点审视过去的自己，我发现有时候人们之所以感到迷茫、痛苦和无助，很大程度上就是因为我们找不到一个合适的标尺来衡量自己的价值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;人，就是这么一种动物：&lt;/p&gt;
&lt;p&gt;你喜欢过的东西，即使不要了，也不允许别人糟践。&lt;/p&gt;
&lt;p&gt;你喜欢过的人，即使分开了，也不允许别人对他不好。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;这不是我们对他们的爱，而是我们想象中的爱。这种想象中的爱，让我们以为自己很爱对方，自己所做的一切都是为了对方。可是结果呢？对方却一点都没有感受到，反而对你满是抱怨。换句话说，你的爱其实放了空枪。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;人们不会对你的缺陷念念不忘，人们只会在你最春风得意的时候，突然想起来：“哦？那家伙不是少两根手指吗？这也能办到，好厉害……”&lt;/p&gt;
&lt;p&gt;你失败一千次也不会有人记得你，因为人们只会记住你成功的一次。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;生命是平等的，财富是不平等的。医疗改革的目的就是让每一个社会公民，不管钱多钱少都能看得起病，有最基本的医疗保障，尽量抹平因财富带来的医疗资源分配不公的问题。如果用不平等的东西来购买平等，只会造成更大的不平等，产生更多的社会矛盾，使原本突出的贫富差距变得更加明显。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;要明白：墙，永远为大多数人而设；门，只会为少数人而开。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;当你的人生即将陷入黑暗，却有人甘愿陪你走向黑暗深处。什么人生啊、理想啊、爱情啊之类的，说到底不就是为了找到一个愿意陪你走向黑暗的人吗？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;也许，人们的坚持，往往不是因为相信未来，而是他们不想背叛过去。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;也许我们无法明白“活着”的意义，但是我们已经为“活着”付出了太多代价；也许我们无法实现自己的梦想，但是我们已经为梦想流下了太多泪水。我们能做的，仅仅是在这条路上走得更远，绝不能回头。天堂未必在前方，但地狱一定在身后。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="知无涯"&gt;知无涯&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;他们活在自我建构的“文明殿堂”里，时常自诩自己为“孤独的人”。而我恰恰认为，这些“文明殿堂中的孤独者”比那些热衷于成功学和心灵鸡汤的俗人更加无知。这类人往往自以为到达了无人知晓的广阔世界，其实不过是将自己关进了臆想出的精神牢笼，变成了一名“文化的囚徒”而已。&lt;/p&gt;
&lt;p&gt;说得直接点儿，到底是一种怎样的卑怯心理，才会想到要用区区几页书来装裱自己的人格？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;说到底，你读书，不管是一千本还是一万本，那只是消费。而写作，哪怕只有一个字和一句话，那也是生产。生命是短暂的，要学会利用有限的时间，书写关于自己的历史。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;我常常想，一个人年轻的时候，就像一块干瘪的海绵，要想尽办法去吸收更多的水分，这么做就是为了有朝一日能够释放自身的能量。而一块不懂得释放的海绵，即使吸收再多的水分，也最多只是一个臃肿的水货而已。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;孤独有真伪之分。毫不客气地说，现代人的孤独都是装出来的。因为孤独的标准实在太高，一般人没资格孤独。人际交往上受点儿挫折就喊孤独，那是心理脆弱，与孤独无关。所以，任何人的孤独，如果未达到汉语词典所解释的程度，皆是伪孤独。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;你读过的书不仅没有化作强大的内心力量，甚至都无法替你解开人生困惑，唯一的功效就是多了几件演绎孤独的戏服。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;如果没有读书，我就不会对人生产生期待，那样就更容易获得满足；如果没有读书，我就不会了解世界是多么精彩，那样就不会向往独自远行；如果没有读书，我的心中就不会孕育出那些蓬勃跳动的梦想，那样就不会轻易感到失望；如果没有读书，我可能永远都不明白两个人的甜蜜，那样就不会尝出一个人的苦涩。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;其实，人们经常讨论哪本书更“高档”，不是因为他们真的喜欢那本书，而是因为他们幻想成为读过这本书的人。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;读书固然能给人带来改变，但是这改变尚不足以使人脱胎换骨。即便能带来某些改变，也需要付出漫长的时间和极大的毅力.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;不要以为看几本书就能让一个人起到脱胎换骨的功效，更不要以为读几本书就能让一个人变得有思想、有内涵，思想是顿悟，内涵是熏陶，这两样都不是从书上能学来的。要做好读一辈子书也只能当个愚人莽汉的心理准备。&lt;/p&gt;
&lt;p&gt;阅读永远是一场孤独的旅程，考验的是你有没有决心和耐心走到生命的尽头。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;但我觉得，如果一味地追求语言的通俗化，最后就会演变为语言的低俗化，最终丧失文学的美感，也将丧失我们阅读思辨文学的能力。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="尺素书"&gt;尺素书&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;关于选择，我也曾经有过作出重要选择的经历。跟你不同的是，我并没有纠结很久，我只是问了自己三个问题：我想要什么？我还有什么？我能放弃什么？当我冷静地作出回答时，积压于心的迷茫和痛苦的雾霾，瞬间就烟消云散，一切都豁然开朗。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;关于选择，我也曾经有过作出重要选择的经历。跟你不同的是，我并没有纠结很久，我只是问了自己三个问题：我想要什么？我还有什么？我能放弃什么？当我冷静地作出回答时，积压于心的迷茫和痛苦的雾霾，瞬间就烟消云散，一切都豁然开朗。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;我庆幸自己没有像懦夫似的抱怨这个世界的不公，因为世界本身就是一个巨大的天平，左侧是公平，右侧是不公平，当上帝倾向于公平之时，这个世界就已经不公平了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;我只需要明白，“选择承受苦难的人并不只有你”——这句话足矣。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;你曾在《大地之灯》中写道：“人是没有孤不孤独之分的，只有对孤独害怕不害怕之分。对孤独害怕，不过是因为对这世界的庞大森然有所畏惧，毕竟在与世界的比照之下，人太微薄渺小，一生又太短暂。这样的人喜欢用拼命付出感情或者拼命索要感情的方式来映照自己的存在，给自己以希望和慰藉。结果却往往只是更加深刻地证明了生命的本质孤独。有时候甚至尴尬到有话想要说的时候无人可说，有人可以说话的时候无话可说。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;我曾经在给朋友的信中写道：“人的一生，最难以保存的，是时间；最终能留下的，是记忆。而能够同时承载两者的，唯有文字。那些流逝的分分秒秒，如同被风扬起的沙粒，于漫长的时光中，在我们心头塑起一座记忆的沙堡，那是成长的里程碑，更是生命的珍贵财富。总有一天，你会再次翻阅自己过去亲手写下的每一段故事，每一次的开心与难过，每一次的忧伤与喜悦，你一定会被曾经的自己所感动。而这份感动，我想，是值得去怀念的。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;我说：在如今这个物欲横流，精神文明严重贬值的时代，信仰已经退化成一个讽刺性的词汇，但是我依然抱有信仰。我的信仰就是梦想。因为我坚信，人类因梦想而伟大，梦想因执著而伟大。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;所以，每每看见选秀节目上，歌手诉说自己曾经的贫困与磨难，却又标榜自己的音乐梦想时，我都会感到不可理喻。难道音乐真的已经病入膏肓，沦落到如此孱弱的地步了吗？一个拥有音乐梦想的人，应该同时拥有一个高贵的灵魂。即使贫穷，即使落魄，即使是一个衣不遮体的流浪者，他也可以对着高高在上的国王，竖起中指——除了梦想，没人可以让我低头臣服。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;我不怕一个人走到世界尽头，只怕陪伴我的人不能坚持到最后。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;我总是想，两个人在一起做同样的事，那种感觉是最好的。我们读同一本书，看同一部电影，听同一首歌，欣赏同一幕风景。于是，两个原本独立的人，因为有了共同的记忆，让彼此靠得更近。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="切梦刀"&gt;切梦刀&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;花开自有花落，相聚还有别离。时间就像一只目不转睛的眼睛，它看清了虚假，看清了残缺，也看清了岁月的残酷。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="在知乎"&gt;在知乎&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;“今天不想跑，所以才去跑，这才是长距离跑者的思维方式。”——村上春树&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;知友：看书要不要带目的性？&lt;/p&gt;
&lt;p&gt;程浩：要带问题，不要带目的。要有诉求，不要有功利。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;痛苦并非来自失去身体的自由，心灵的不屈与桀骜才是一切痛苦的本源。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;所谓的“看美剧，过六级”之类的帖子，都是写给那些好吃懒做，眼高手低，渴望提高又不想付出，睡前下决心，起床刷微博的迷茫无知男女的。他们想学习，却忍不了学习过程的枯燥无趣；他们有理想，却总觉得理想是个一锤子买卖，眼前的小事与理想无关；他们总想知道牛逼的学霸是怎么学习的，却没想过学霸的学习计划是按分钟算的。总而言之就是一句话：听的比想的多，想的比说的多，说的比做的多。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;这世上有两种人拥有与生俱来的正能量，一种人生活在阳光下，另一种人生活在黑暗里。前者就像海绵，已经吸收了足够多的温暖，只等待释放的一刻。后者渴望光明，所以无时无刻不在向光明靠近。&lt;/p&gt;
&lt;p&gt;正能量不是一种知识，所以我们永远无法学会。它是一种态度，一种习惯，这需要时间去培养。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;因为任何一条与社会主流价值观相背的路，都存在所谓的“鸡飞蛋打、一无所有、竹篮打水一场空”的风险。你会遇到前所未有的阻力，其中有来自家庭的，也有来自社会的，也有来自内心的。所以你不敢。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;知友：女人是男人的什么？&lt;/p&gt;
&lt;p&gt;程浩：女人是男人的脸。男人可以丢命，但是不能丢脸。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;何谓教育？传道，授业，解惑也。&lt;/p&gt;
&lt;p&gt;何谓传道？为人处世之原则；何谓授业？安身立命之本事；何谓解惑？脚踏实地之心态。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;知友：如何接受初恋女友结婚这一事实？&lt;/p&gt;
&lt;p&gt;程浩：为了不让现任女友变成下一个初恋女友，更爱她一点吧！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;病人的恐惧源自死亡的威胁，与病房有什么关系？如果你能治好他，能挽救他的生命，那即使让他睡在公共厕所，他也会对你感恩戴德。如果你治不好他，他的生命即将终结，那即使住到马尔代夫的海滨别墅里，对他而言也不过是一副大一点的骨灰盒而已。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr /&gt;
&lt;blockquote&gt;
&lt;p&gt;此刻，我正在使用网络，但并不意味着失去网络我的生活就无法继续。也许，只有一个躺在床上的病人才能发现生活与人间的条条大路。那些走在都市的常人却只能迈向科技与智慧的数码地牢。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="我的笔记"&gt;我的笔记&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;读书是一种习惯，也是一种技巧，更是一门技术。一个人读书，不是说他逐字逐句地念过一遍就能叫做“读书”，那顶多算是翻书。人家说，“想到”和“得到”之间，还有一个词叫“做到”。读书同样如此，“读过了”和“读懂了”之间，还有一段距离，而“读懂了”和“做到了”之间，也有一段距离。这本书就是告诉你一个如何才能“读懂”一本书的方法，至于能否“做到”，这需要看一个人的执行力，以及他的实践精神。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2014.09.19&lt;/p&gt;
&lt;h4 id="footnotes"&gt;Footnotes:&lt;/h4&gt;
&lt;p&gt;&lt;sup&gt;&lt;a href="#fnref:1" name="fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt; 这是程浩的文字集,二十年间，他没有下地走过路，疾病已成为生活的一部分，是真正向死而生的人。自称“职业病人”的他，坦然接受命运的不公，微笑面对人生的愁苦，他说道：“人消除痛苦的唯一办法就是找到自己的救赎之路。”而他那些充当救赎之路的文字，有着踏过痛苦后贴近大地的力量。他对生的渴望和对命运的包容，震撼了无数网友。这本书即是他的生命之作。——来自豆瓣。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:blog2.karottc.com,2014-09-07:/posts/2014-09-07-maximum-consecutive-subsequence/</id>
    <title type="html">归纳法求解最大连续子序列</title>
    <published>2014-09-07T12:26:17Z</published>
    <updated>2014-09-07T12:26:17Z</updated>
    <link rel="alternate" href="http://blog2.karottc.com/posts/2014-09-07-maximum-consecutive-subsequence/"/>
    <content type="html">&lt;h3 id="问题"&gt;问题&lt;/h3&gt;
&lt;p&gt;求最大连续子序列的问题描述如下： &amp;gt; 给定一个实数序列 x&lt;sub&gt;1&lt;/sub&gt;, x&lt;sub&gt;2&lt;/sub&gt;, … , x&lt;sub&gt;n&lt;/sub&gt;（不必是正数），寻找一个（连续的）子序列 x&lt;sub&gt;i&lt;/sub&gt;, x&lt;sub&gt;i+1&lt;/sub&gt;, … , x&lt;sub&gt;j&lt;/sub&gt;，使得其数值之和在所有连续子序列数值之和中是最大的。&lt;/p&gt;
&lt;p&gt;这个问题就是最大子序列问题，所求的的这个序列就叫做——&lt;em&gt;最大子序列&lt;/em&gt;。下面通过数学归纳法来分析和解决这个问题，解决这个问题的最好目标是： &lt;strong&gt;一个算法，能够只扫描此序列一次就得到最大子序列&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id="归纳分析"&gt;归纳分析&lt;/h3&gt;
&lt;p&gt;根据上面的问题可以直接得到一般的归纳假设： &amp;gt; &lt;strong&gt;&lt;font color="red"&gt;归纳假设：&lt;/font&gt;&lt;/strong&gt; 已知如何找到规模小于 n 的序列的最大子序列。&lt;/p&gt;
&lt;p&gt;下面假定一些变量：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;给定序列 &lt;em&gt;S(n)&lt;/em&gt;=(x&lt;sub&gt;1&lt;/sub&gt;, x&lt;sub&gt;2&lt;/sub&gt;, … , x&lt;sub&gt;n&lt;/sub&gt;).&lt;/li&gt;
&lt;li&gt;序列 &lt;em&gt;S(n)&lt;/em&gt; 的子序列为 &lt;em&gt;S&lt;sup&gt;’&lt;/sup&gt;(n)&lt;/em&gt; .&lt;/li&gt;
&lt;li&gt;序列 &lt;em&gt;S(n)&lt;/em&gt; 的最大子序列为 &lt;em&gt;S&lt;sup&gt;’&lt;/sup&gt;&lt;sub&gt;M&lt;/sub&gt;(n)&lt;/em&gt;=(x&lt;sub&gt;i&lt;/sub&gt;, x&lt;sub&gt;i+1&lt;/sub&gt;, … , x&lt;sub&gt;j&lt;/sub&gt;).&lt;/li&gt;
&lt;li&gt;序列 &lt;em&gt;S(n)&lt;/em&gt; 的最大后缀子序列为 &lt;em&gt;S&lt;sup&gt;’&lt;/sup&gt;&lt;sub&gt;E&lt;/sub&gt;(n)&lt;/em&gt;=(x&lt;sub&gt;k&lt;/sub&gt;, x&lt;sub&gt;k+1&lt;/sub&gt;, … , x&lt;sub&gt;n&lt;/sub&gt;). �&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;现在开始用数学归纳法来证明：&lt;/p&gt;
&lt;ol type="1"&gt;
&lt;li&gt;当 n ＝ 1 时， &lt;em&gt;S(1)&lt;/em&gt;=x&lt;sub&gt;1&lt;/sub&gt;，如果 x&lt;sub&gt;1&lt;/sub&gt;&amp;lt;0，则 &lt;em&gt;S&lt;sup&gt;’&lt;/sup&gt;&lt;sub&gt;M&lt;/sub&gt;(1)&lt;/em&gt;＝NULL；否则 &lt;em&gt;S&lt;sup&gt;’&lt;/sup&gt;&lt;sub&gt;M&lt;/sub&gt;(1)&lt;/em&gt;＝x&lt;sub&gt;1&lt;/sub&gt; .&lt;/li&gt;
&lt;li&gt;当 n = n-1 时，&lt;em&gt;S(n-1)&lt;/em&gt;=(x&lt;sub&gt;1&lt;/sub&gt;, x&lt;sub&gt;2&lt;/sub&gt;, … , x&lt;sub&gt;n-1&lt;/sub&gt;)，假设 &lt;em&gt;S&lt;sup&gt;’&lt;/sup&gt;&lt;sub&gt;M&lt;/sub&gt;(n-1)&lt;/em&gt;=(x&lt;sub&gt;i&lt;/sub&gt;, x&lt;sub&gt;i+1&lt;/sub&gt;, … , x&lt;sub&gt;j&lt;/sub&gt;).&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当 n = n 时，&lt;em&gt;S(n)&lt;/em&gt;=(x&lt;sub&gt;1&lt;/sub&gt;, x&lt;sub&gt;2&lt;/sub&gt;, … , x&lt;sub&gt;n&lt;/sub&gt;)=( &lt;em&gt;S(n-1)&lt;/em&gt;, x&lt;sub&gt;n&lt;/sub&gt;)，然后由 &lt;em&gt;S&lt;sup&gt;’&lt;/sup&gt;&lt;sub&gt;M&lt;/sub&gt;(n-1)&lt;/em&gt; 推导出 &lt;em&gt;S&lt;sup&gt;’&lt;/sup&gt;&lt;sub&gt;M&lt;/sub&gt;(n)&lt;/em&gt;，共有下面3种情况：&lt;/p&gt;
&lt;ol type="1"&gt;
&lt;li&gt;&lt;em&gt;S&lt;sup&gt;‘&lt;/sup&gt;&lt;sub&gt;M&lt;/sub&gt;(n-1)&lt;em&gt;=(x&lt;sub&gt;i&lt;/sub&gt;, x&lt;sub&gt;i+1&lt;/sub&gt;, … , x&lt;sub&gt;j&lt;/sub&gt;) ＝ NULL，如果 x&lt;sub&gt;n&lt;/sub&gt;&amp;lt;0，则 &lt;em&gt;S&lt;sup&gt;’&lt;/sup&gt;&lt;sub&gt;M&lt;/sub&gt;(n)&lt;/em&gt;＝NULL；否则 &lt;/em&gt;S&lt;sup&gt;’&lt;/sup&gt;&lt;sub&gt;M&lt;/sub&gt;(n)&lt;/em&gt;＝x&lt;sub&gt;n&lt;/sub&gt; .&lt;/li&gt;
&lt;li&gt;&lt;em&gt;S&lt;sup&gt;‘&lt;/sup&gt;&lt;sub&gt;M&lt;/sub&gt;(n-1)&lt;em&gt;=(x&lt;sub&gt;i&lt;/sub&gt;, x&lt;sub&gt;i+1&lt;/sub&gt;, … , x&lt;sub&gt;j&lt;/sub&gt;) &amp;amp;&amp;amp; j = n-1，此时 &lt;/em&gt;S&lt;sup&gt;’&lt;/sup&gt;&lt;sub&gt;M&lt;/sub&gt;(n-1)&lt;/em&gt; ＝ &lt;em&gt;S&lt;sup&gt;‘&lt;/sup&gt;&lt;sub&gt;E&lt;/sub&gt;(n-1)&lt;em&gt;，如果 x&lt;sub&gt;n&lt;/sub&gt; &amp;gt; 0，&lt;/em&gt;S&lt;sup&gt;’&lt;/sup&gt;&lt;sub&gt;M&lt;/sub&gt;(n)&lt;/em&gt;＝ &lt;em&gt;S&lt;sup&gt;’&lt;/sup&gt;&lt;sub&gt;M&lt;/sub&gt;(n-1)&lt;/em&gt; + x&lt;sub&gt;n&lt;/sub&gt; ＝ (x&lt;sub&gt;i&lt;/sub&gt;, x&lt;sub&gt;i+1&lt;/sub&gt;, … , x&lt;sub&gt;j&lt;/sub&gt;) + x&lt;sub&gt;n&lt;/sub&gt;，否则 &lt;em&gt;S&lt;sup&gt;‘&lt;/sup&gt;&lt;sub&gt;M&lt;/sub&gt;(n)&lt;em&gt;＝ &lt;/em&gt;S&lt;sup&gt;’&lt;/sup&gt;&lt;sub&gt;M&lt;/sub&gt;(n-1)&lt;/em&gt;=(x&lt;sub&gt;i&lt;/sub&gt;, x&lt;sub&gt;i+1&lt;/sub&gt;, … , x&lt;sub&gt;j&lt;/sub&gt;) .&lt;/li&gt;
&lt;li&gt;&lt;em&gt;S&lt;sup&gt;‘&lt;/sup&gt;&lt;sub&gt;M&lt;/sub&gt;(n-1)&lt;em&gt;=(x&lt;sub&gt;i&lt;/sub&gt;, x&lt;sub&gt;i+1&lt;/sub&gt;, … , x&lt;sub&gt;j&lt;/sub&gt;) &amp;amp;&amp;amp; j &amp;lt; n-1，此时 &lt;/em&gt;S&lt;sup&gt;’&lt;/sup&gt;&lt;sub&gt;M&lt;/sub&gt;(n-1)&lt;/em&gt; &amp;gt; &lt;em&gt;S&lt;sup&gt;‘&lt;/sup&gt;&lt;sub&gt;E&lt;/sub&gt;(n-1)&lt;em&gt;，则可得到 &lt;/em&gt;S&lt;sup&gt;’&lt;/sup&gt;&lt;sub&gt;M&lt;/sub&gt;(n)&lt;/em&gt;＝&lt;em&gt;S&lt;sup&gt;’&lt;/sup&gt;&lt;sub&gt;M&lt;/sub&gt;(n-1)&lt;/em&gt; 或者 &lt;em&gt;S&lt;sup&gt;‘&lt;/sup&gt;&lt;sub&gt;M&lt;/sub&gt;(n)&lt;em&gt;＝&lt;/em&gt;S&lt;sup&gt;’&lt;/sup&gt;&lt;sub&gt;E&lt;/sub&gt;(n-1)&lt;/em&gt; + x&lt;sub&gt;n&lt;/sub&gt; .&lt;/li&gt;
&lt;/ol&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;即上述可得证：能够求出 &lt;em&gt;S(n)&lt;/em&gt;=(x&lt;sub&gt;1&lt;/sub&gt;, x&lt;sub&gt;2&lt;/sub&gt;, … , x&lt;sub&gt;n&lt;/sub&gt;) 的最大连续子序列，不过上述的证明过程中用了&lt;strong&gt;增强归纳假设&lt;/strong&gt;，这个也是这个证明的关键： &amp;gt; &lt;strong&gt;&lt;font color="red"&gt;更强的归纳假设：&lt;/font&gt;&lt;/strong&gt; 已知如何找到规模小于 n 的序列的最大子序列，以及作为后缀的最大子序列。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我们知道了 &lt;em&gt;S&lt;sup&gt;’&lt;/sup&gt;&lt;sub&gt;M&lt;/sub&gt;(n)&lt;/em&gt; 和 &lt;em&gt;S&lt;sup&gt;’&lt;/sup&gt;&lt;sub&gt;E&lt;/sub&gt;(n)&lt;/em&gt; 这两个序列，算法也就明确了。我们把 x&lt;sub&gt;n&lt;/sub&gt; 加入到最大后缀子序列中，如果它的和大于原来的最大子序列，则得到一个新的最大子序列（同样也是一个后缀），否则，保留以前的最大子序列。但求解过程还没有结束，我们还需要寻找新的最大后缀子序列，因为不能只是简单的把 x&lt;sub&gt;n&lt;/sub&gt; 加到以前的最大后缀中，有可能以 x&lt;sub&gt;n&lt;/sub&gt; 结束的最大后缀的和是负数，在这种情况下，我们就需要把NULL（空集）作为最大后缀（以及把随后的 x&lt;sub&gt;n+1&lt;/sub&gt; 也考虑进去）。&lt;/p&gt;
&lt;h3 id="具体算法实现"&gt;具体算法实现&lt;/h3&gt;
&lt;p&gt;根据上面的分析过程，下面贴上具体的C++代码：&lt;/p&gt;
&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode cpp"&gt;&lt;code class="sourceCode cpp"&gt;&lt;span class="dt"&gt;int&lt;/span&gt; Maximum_Consecutive_Subsequence(&lt;span class="dt"&gt;int&lt;/span&gt; *x, &lt;span class="dt"&gt;int&lt;/span&gt; n)                                 
{                                                                                  
    &lt;span class="dt"&gt;int&lt;/span&gt; global_Max = &lt;span class="dv"&gt;0&lt;/span&gt;;   &lt;span class="co"&gt;// 最大子序列的和                                        &lt;/span&gt;
    &lt;span class="dt"&gt;int&lt;/span&gt; suffix_Max = &lt;span class="dv"&gt;0&lt;/span&gt;;   &lt;span class="co"&gt;// 最大后缀子序列的和，每次迭代都会更新                  &lt;/span&gt;
    &lt;span class="dt"&gt;int&lt;/span&gt; i = &lt;span class="dv"&gt;0&lt;/span&gt;;                                                                     
    &lt;span class="cf"&gt;for&lt;/span&gt; (i = &lt;span class="dv"&gt;0&lt;/span&gt;; i &amp;lt; n; i++)                                                        
    {                                                                              
        &lt;span class="cf"&gt;if&lt;/span&gt; (x[i] + suffix_Max &amp;gt; global_Max)                                                                  
        {                                                                          
            suffix_Max = suffix_Max + x[i];                                        
            global_Max = suffix_Max;                                               
        }                                                                          
        &lt;span class="cf"&gt;else&lt;/span&gt; &lt;span class="cf"&gt;if&lt;/span&gt; (x[i] + suffix_Max &amp;gt; &lt;span class="dv"&gt;0&lt;/span&gt;)                                            
        {                                                                          
            suffix_Max = suffix_Max + x[i];                                        
        }                                                                          
        &lt;span class="cf"&gt;else&lt;/span&gt;                                                                       
        {                                                                          
            suffix_Max = &lt;span class="dv"&gt;0&lt;/span&gt;;                                                        
        }                                                                          
    }                                                                              
    &lt;span class="cf"&gt;return&lt;/span&gt; global_Max;                                                             
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;更详细的代码可以戳&lt;a href="https://github.com/karottc/practice/blob/master/algorithm/maximum_subsequences.cc"&gt;这里&lt;/a&gt;. &lt;br /&gt;&lt;/p&gt;
&lt;p&gt;2014.09.07&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:blog2.karottc.com,2014-09-03:/posts/2014-09-03-life-meaning/</id>
    <title type="html">【解惑】人生有何意义</title>
    <published>2014-09-03T12:26:17Z</published>
    <updated>2014-09-03T12:26:17Z</updated>
    <link rel="alternate" href="http://blog2.karottc.com/posts/2014-09-03-life-meaning/"/>
    <content type="html">&lt;p&gt;这几天看胡适的书，其中有一篇写到在民国八年的时候，胡适当年的同学朱子平问了他一个问题：“人生在世，究竟是为什么的？” 胡适当时的回答就是：“这个问题是没有答案的…….”&lt;/p&gt;
&lt;h3 id="人生的意义"&gt;人生的意义&lt;/h3&gt;
&lt;p&gt;然而在民国十七年一月二十七日，胡适又写了一篇，清楚的回答了这个问题： &amp;gt; “人生有何意义？” &amp;gt; &amp;gt; 其实这个问题是容易解答的。人生的意义全是各人自己寻出来，造出来的：高尚，卑劣，清贵，污浊，有用，无用，……全靠自己的作为。生命本身不过是一件生物学的事实，有什么意义可说？生一个人与一只猫，一只狗，有什么分别？人生的意义不在于何以有生，而在于自己怎样生活。你若情愿把这六尺之躯葬送在白昼作梦之上，那就是你这一生的意义。你若发愤振作起来，决心去寻求生命的意义，去创造自己的生命的意义，那么，你活一日便有一日的意义，作一事便添一事的意义，生命无穷，生命的意义也无穷了。 &amp;gt; &amp;gt; 总之，生命本没有意义，你要能给他什么意义，他就有什么意义。与其终日冥想人生有何意义，不如试用此生作点有意义的事。……&lt;/p&gt;
&lt;p&gt;这个问题我也思考过，始终没有一个好的答案，今日读到此篇，感到万分惭愧，九十年前的人就已经给出了这个很好的答案了。&lt;/p&gt;
&lt;p&gt;&lt;font color="red"&gt;&lt;strong&gt;人生本无意义，我们要做的就是努力的去让自己的人生过的有意义！&lt;/strong&gt; &lt;/font&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src="/static/images/201406/20140903_life_meaning.png" alt="人生的意义" /&gt; &lt;br /&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;Update:&lt;/p&gt;
&lt;p&gt;上面的东西也只能算一个结论，思考出这个结论的过程，比结论本身更有趣。下面来剖析过程，要说明这个问题，首先的要说清楚什么是人生和人生观。&lt;/p&gt;
&lt;h3 id="人生及人生观的定义"&gt;人生及人生观的定义&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;人是哺乳动物中的有二手二足用脑的动物。&lt;/p&gt;
&lt;p&gt;人生即是这种动物所演的戏剧，这种动物在演时，就有 &lt;strong&gt;人生&lt;/strong&gt;；停演时就没 &lt;strong&gt;人生&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;所谓人生观，就是演时对于所演之态度，譬如：有的喜唱花面，有的喜唱老生，有的喜唱小生，有的喜摇旗呐喊；凡此种种两脚两手在演戏的态度，就是 &lt;strong&gt;人生观&lt;/strong&gt; &lt;sup&gt;&lt;a href="#fn:1" name="fnref:1"&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;虽然是如此，但对人生的思考和研究好像历来都是一个哲学问题，所以这里还有必要给哲学一个定义： &amp;gt; &lt;strong&gt;哲学&lt;/strong&gt;是研究人生切要的问题，从意义上着想，去找一个比较可普遍适用的意义&lt;sup&gt;&lt;a href="#fn:2" name="fnref:2"&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;所以哲学的起点就是由于人生切要问题，而哲学的结果就是要对人生适用（虽然不一定能完全解决人生的所有问题和困惑）。人生离开哲学，就是无意义的人生；哲学离开了人生，就变成了想入非非的哲学。所以有很多哲学家只是凭空臆说，离人生问题太远，真是上穷碧落，越闹越糟。&lt;/p&gt;
&lt;h3 id="生活的意思"&gt;生活的意思&lt;/h3&gt;
&lt;p&gt;胡适当时给《新生活》杂志第一期做的一篇文章也解释了一下生活的意思： &amp;gt; 诸位，凡是自己说不出“为什么这样做”的事，都是没有意思的生活。 &amp;gt; &amp;gt; 反过来说，凡是自己说得出“为什么这样做”的事，都可以说是有意思的生活。 &amp;gt; &amp;gt; 生活的“为什么”，就是生活的意思。&lt;/p&gt;
&lt;p&gt;这句话我感觉跟现代的一个互联网天才 &lt;em&gt;Aaron Swartz&lt;/em&gt; 曾经说过的话有点同感：&lt;font color="red"&gt;&lt;strong&gt;相信你应该真的每时每刻都问自己，现在的世界有什么重要的是我能参与去做的？如果你没做那重要的是，又是为什么？&lt;/strong&gt; &lt;/font&gt;.&lt;/p&gt;
&lt;h3 id="为什么读书"&gt;为什么读书&lt;/h3&gt;
&lt;p&gt;下面同样摘录一段胡适的演讲词： &amp;gt; 从前有一位大哲学家做了一篇《读书乐》，说到读书的好处，他说：“书中自有千钟粟，书中自有黄金屋，书中自有颜如玉。”这意思就是说，读了书可以做大官，获厚禄，可以不至于住茅草房子，可以娶得年轻的漂亮太太（台下哄笑）。诸位听了笑起来，足见诸位对于这位哲学家所说的话不十分满意。现在我就讲所以要读书的别的原因。&lt;/p&gt;
&lt;p&gt;不过这里我想，大家笑的原因不是不满意，而是同意，并且有人这么直白的说出来，所以发笑。可见就算胡适这样的大家，为了把话题继续下去也要曲解大家的意思。&lt;/p&gt;
&lt;p&gt;当然还有明确的说明为什么要读书： &amp;gt; 为什么要读书？ &amp;gt; &amp;gt; 有三点可以讲：第一，因为书是过去已经知道的智识学问和经验的一种记录，我们读书便是要接受这人类的遗产；第二，为要读书而读书，读了书便可以多读书；第三，读书可以帮助我们解决困难，应付环境，并可获得思想材料的来源&lt;sup&gt;&lt;a href="#fn:3" name="fnref:3"&gt;3&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;到后面自然是书读的越多，越能将所有的知识融会贯通，更能知道知识无涯，会让人变得谦卑——见过真正的高山才能有的谦卑！&lt;/p&gt;
&lt;h3 id="自古忠孝不能两全"&gt;自古忠孝不能两全&lt;/h3&gt;
&lt;p&gt;从古代的封建社会开始，我们接受的教育就是要建功立业，所以由此引发的矛盾就是忠孝不能两全——要忠君爱国、建功立业就没法照顾年老的父母以尽孝道。这是自古的矛盾，而在现代以及今天这个时代，“忠”字换成了事业，即事业和孝道也做不到兼顾。&lt;/p&gt;
&lt;p&gt;胡适在追忆他母亲的描述： &amp;gt; 先母所生，只适一人，徒以爱子故，幼岁即令远出游学；十五年中，侍膝下仅四五月耳。生未能侍，病未能侍，毕世劬劳未能丝毫分任，生死永决乃亦未能面。平生惨痛，何以加此！伏念先母一生行实，虽纤细琐屑不出于家庭闾里之间，而其至性至诚，有宜永存而不朽者，故粗叙梗概，随讣上闻，伏乞矜鉴&lt;sup&gt;&lt;a href="#fn:4" name="fnref:4"&gt;4&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;还有一些胡适的自述： &amp;gt; 我在新公学解散之后，得了两三百元的欠薪，前途茫茫，毫无把握，那敢回家去？只好寄居在上海，想寻一件可以吃饭养家的事。在那个忧愁烦闷的时候，又遇着一班浪漫的朋友，我就跟着他们堕落了。&lt;/p&gt;
&lt;p&gt;如果身前未能尽到孝道，身后再怎么追忆、悔恨又有个屁用。无数的前人用他们的事实表明都是放弃了尽孝而追求事业，事后又写很多无比悔恨的文字。我历来是看不起、看不惯这种人，但现在却尝试去理解他们了。&lt;/p&gt;
&lt;p&gt;因为在事业上成功了，所以不孝这个事实就被人们淡化了，如果在事业上没成功，那就只剩下了这个不孝的事实。难道世俗意义上的成功是人人都可以做到的吗？虽然自古已有 &lt;font color="red"&gt;&lt;em&gt;子欲养而亲不在&lt;/em&gt;&lt;/font&gt; 这样的名句，但是谁又把它当回事儿了，依然都是义无反顾的去追求事业，在意的人反而会被说成软弱无能。&lt;/p&gt;
&lt;p&gt;这种矛盾在知乎上还是有很多的讨论：&lt;a href="http://www.zhihu.com/question/25148298/answer/30210220"&gt;那些在北上广深国外打拼的年轻人们，你们的父母怎么办？&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;愿你我共勉！&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;2014.09.03&lt;/p&gt;
&lt;h4 id="footnotes"&gt;Footnotes:&lt;/h4&gt;
&lt;p&gt;&lt;sup&gt;&lt;a href="#fnref:1" name="fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt; 这个是民国新文化运动时期吴稚晖先生在《太平洋杂志》上发表的一篇《一个新信仰的宇宙观及人生观》中给人生下的一个定义。&lt;/p&gt;
&lt;p&gt;&lt;sup&gt;&lt;a href="#fnref:2" name="fn:2"&gt;2&lt;/a&gt;&lt;/sup&gt; 这是胡适先生在《中国哲学史大纲》（上卷）中给哲学的一个定义。&lt;/p&gt;
&lt;p&gt;&lt;sup&gt;&lt;a href="#fnref:3" name="fn:3"&gt;3&lt;/a&gt;&lt;/sup&gt; 出自胡适在1930年11月下旬在上海青年会演讲词。&lt;/p&gt;
&lt;p&gt;&lt;sup&gt;&lt;a href="#fnref:4" name="fn:4"&gt;4&lt;/a&gt;&lt;/sup&gt; 这是胡适在民国十年六月二十五日的《先母行述》中的一段，这里只是一笔带过。关于他和他目前的详细文字在他的《四十自述》中有更详细的记载。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:blog2.karottc.com,2014-08-31:/posts/2014-08-31-evernote-wiz/</id>
    <title type="html">习惯的力量——从evernote试用为知笔记</title>
    <published>2014-08-31T12:26:17Z</published>
    <updated>2014-08-31T12:26:17Z</updated>
    <link rel="alternate" href="http://blog2.karottc.com/posts/2014-08-31-evernote-wiz/"/>
    <content type="html">&lt;h3 id="evernote和为知笔记"&gt;evernote和为知笔记&lt;/h3&gt;
&lt;p&gt;从开始用&lt;a href="http://wiz.cn/" title="为知笔记主页"&gt;为知笔记&lt;/a&gt;这个程序到现在，有一周+的时间了，在此之前，我一直用的&lt;a href="https://evernote.com/" title="evernote国际版主页，还有国内版!"&gt;evernote&lt;/a&gt;，可以说我的生活中evernote已经变得非常重要，其重要的程度甚至使我从Linux转向了使用mac os，就因为mac os平台有evernote的客户端。去用为知笔记的起因是源于同学的推荐，了解了一下以后就装了一个来用，最吸引我一点是相比于evernote的免费用户，它的月流量是evernote的10倍，并且而已在移动设备上离线查看笔记，这些都是evernote的收费功能。&lt;/p&gt;
&lt;p&gt;为了深度的使用它，我首先导入了一小部分以前evernote的笔记，并且在有需求的时候我的第一解决方案都是优先考虑使用为知笔记，可以使用了这么久了，还是有很多不满意的地方，当然这些都是细节的地方，也许不是它做的不好，而是我用了几年的evernote已经习惯了而已，所以用其他的就会有对比，&lt;strong&gt;这就是习惯的力量，习惯的东西会化成生活中的不知不觉的一部分，让人无法抗拒，自然而然的会提高效率&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;虽然这界面初看上去不会有太大的差别，下面这是为知笔记的一个截图：&lt;br /&gt; &lt;img src="/static/images/201406/20140829_wiz.png" alt="Wiz" /&gt; 然后这是evernote的一个截图：&lt;br /&gt; &lt;img src="/static/images/201406/20140829_evernote.png" alt="Evernote" /&gt; 关键还是在体验和细节上，因为具体使用的时候就是一些琐碎操作，不然搜索、编辑、查看、响应鼠标的滚动速度、以及对网页剪辑的还原度等等。这是说一个我不习惯的地方：为知笔记的里面的超链接，鼠标点击后是在为知笔记自己的程序中打开网页，而evernote是调用系统的浏览器来打开网页，明显我更喜欢或者说更习惯与evernote这种方式。&lt;/p&gt;
&lt;p&gt;所以最后还是决定用evernote作为主要的笔记本，为知笔记为辅助使用，因为它的大流量和离线功能还是挺有用的，只是我不是一直需要，在有需求的时候就来辅助一下，工具本是为了提高效率的，在上面花太多时间就是本末倒置了。&lt;/p&gt;
&lt;h3 id="习惯"&gt;习惯&lt;/h3&gt;
&lt;p&gt;网上讲习惯好处的段子一堆一堆的，我就不在这里说了，只说我的经历。其实习惯的力量的强大时常都能体会到，这次evernote的事就顺便记录了下来而已。从这点看，长辈或者说前辈以及父辈经常告诉我们说，好习惯可以改变一个人，成就一个人，想来也不无道理。&lt;/p&gt;
&lt;p&gt;还记得当年高三的时候，我们学校请了一个川大心理学的老师格桑泽仁来给我们讲考试的心态变化，他其中提到，我们坚持每天早上闹钟一响就起床，不要赖床，坚持21天就能形成一种习惯。不过根据我的尝试，21天这个时间，应该是根据不同的习惯而有不同的时长。&lt;/p&gt;
&lt;p&gt;话说，对于上次我&lt;a href="http://www.karottc.com/blog/2014/06/15/current-doing/"&gt;开始&lt;/a&gt;坚持每天commit一些东西到github上到现在有80+天了，也没感觉到自己养成了习惯，有些时候还是会忘记：&lt;br /&gt; &lt;img src="/static/images/201406/20140830_github.png" alt="Github" /&gt;&lt;/p&gt;
&lt;p&gt;一直在努力，希望做到更好！&lt;/p&gt;
&lt;p&gt;&lt;br /&gt; 2014.08.30&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:blog2.karottc.com,2014-07-10:/posts/2014-07-10-eight-queens-puzzle/</id>
    <title type="html">八皇后问题——Python简单解法</title>
    <published>2014-07-10T12:26:17Z</published>
    <updated>2014-07-10T12:26:17Z</updated>
    <link rel="alternate" href="http://blog2.karottc.com/posts/2014-07-10-eight-queens-puzzle/"/>
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;八皇后问题是一个以国际象棋为背景的问题：如何能够在8×8的国际象棋棋盘上放置八个皇后，使得任何一个皇后都无法直接吃掉其他的皇后？为了达到此目的，任两个皇后都不能处于同一条横行、纵行或斜线上。八皇后问题可以推广为更一般的n皇后摆放问题：这时棋盘的大小变为n×n，而皇后个数也变成n。当且仅当n = 1或n ≥ 4时问题有解。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;关于这个问题更详细的描述可以参见维基百科&lt;sup&gt;&lt;a href="#fnref:1" name="fnref:1"&gt;1&lt;/a&gt;&lt;/sup&gt; ，使用Python的生成器（即含有yield语句的函数）来解这个问题就会变得很简单，15行以内python代码就可以解决这个问题，对于皇后的个数 n &amp;lt; 8 来说还是非常快的，只是当数量上升到很多的时候，这个解法就会非常的慢。不过这里仍然只讨论最简单的解法，后面会顺便提一下更高效的解法，比如&lt;font color="red"&gt;16&lt;/font&gt;个皇后的情况在我的机器上只需要&lt;font size="5px" color="red"&gt;18&lt;/font&gt;秒。&lt;/p&gt;
&lt;p&gt;下面是这个解法的完整的代码：&lt;/p&gt;
&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode python"&gt;&lt;code class="sourceCode python"&gt;&lt;span class="kw"&gt;def&lt;/span&gt; conflict(state, nextX):
    nextY &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="bu"&gt;len&lt;/span&gt;(state)
    &lt;span class="cf"&gt;for&lt;/span&gt; i &lt;span class="kw"&gt;in&lt;/span&gt; &lt;span class="bu"&gt;range&lt;/span&gt;(nextY):
        &lt;span class="cf"&gt;if&lt;/span&gt; &lt;span class="bu"&gt;abs&lt;/span&gt;(state[i] &lt;span class="op"&gt;-&lt;/span&gt; nextX) &lt;span class="kw"&gt;in&lt;/span&gt; (&lt;span class="dv"&gt;0&lt;/span&gt;, nextY &lt;span class="op"&gt;-&lt;/span&gt; i):
            &lt;span class="cf"&gt;return&lt;/span&gt; &lt;span class="va"&gt;True&lt;/span&gt;
    &lt;span class="cf"&gt;return&lt;/span&gt; &lt;span class="va"&gt;False&lt;/span&gt;

&lt;span class="kw"&gt;def&lt;/span&gt; queens(num&lt;span class="op"&gt;=&lt;/span&gt;&lt;span class="dv"&gt;8&lt;/span&gt;, state&lt;span class="op"&gt;=&lt;/span&gt;()):
    &lt;span class="cf"&gt;for&lt;/span&gt; pos &lt;span class="kw"&gt;in&lt;/span&gt; &lt;span class="bu"&gt;range&lt;/span&gt;(num):
        &lt;span class="cf"&gt;if&lt;/span&gt; &lt;span class="kw"&gt;not&lt;/span&gt; conflict(state, pos):
            &lt;span class="cf"&gt;if&lt;/span&gt; &lt;span class="bu"&gt;len&lt;/span&gt;(state) &lt;span class="op"&gt;==&lt;/span&gt; num &lt;span class="op"&gt;-&lt;/span&gt; &lt;span class="dv"&gt;1&lt;/span&gt; :
                &lt;span class="cf"&gt;yield&lt;/span&gt; (pos,)
            &lt;span class="cf"&gt;else&lt;/span&gt;:
                &lt;span class="cf"&gt;for&lt;/span&gt; result &lt;span class="kw"&gt;in&lt;/span&gt; queens(num, state&lt;span class="op"&gt;+&lt;/span&gt;(pos,)):
                    &lt;span class="cf"&gt;yield&lt;/span&gt; (pos,) &lt;span class="op"&gt;+&lt;/span&gt; result&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;上面这段代码关键点有3个，分别是冲突判断（即放置当前皇后位置的时候不能和已存在的皇后有冲突）、递归（遍历所有的情况要用到的方法）和yield表达式（保存遍历的结果的迭代器）。&lt;/p&gt;
&lt;p&gt;冲突检测函数 &lt;code&gt;conflict&lt;/code&gt; 的两个参数分别表示: 已存在的皇后的位置和将要放置的皇后的位置（即下一行中皇后的位置），冲突的条件就是，和已存在的皇后在同一垂直线上( &lt;code&gt;state[i] - nextX == 0&lt;/code&gt; )或者在对角线上（ &lt;code&gt;state[i] - nextX == nextY - i&lt;/code&gt; ）。&lt;/p&gt;
&lt;p&gt;递归函数是通过回溯法来求的每一种可能的情况，这个递归结束的条件是最后一个皇后能够无冲突的找到位置，然后从最后一个皇后的位置一次递归的向上层返回值，同时加上本层的皇后的位置，返回到最上层的时候即完成一次迭代( &lt;code&gt;next()&lt;/code&gt; 函数调用一次)，并且会记住当前的位置，下次继续迭代的时候会接着继续进行（这个其实是yield的特性）。&lt;/p&gt;
&lt;p&gt;yield语句，在这里可以简单但当作储存返回值的一个元组或者列表来理解（实际上是一个迭代器，稍微有点复杂，后面会具体讲到），这里一次完整的递归（从 &lt;code&gt;yield (pos, )&lt;/code&gt; 这句返回到最上层调用）生成一种可能的情况（序列），也即迭代器的一项（对应于一种满足要求的所有皇后的摆法），在yield的使用迭代过程中，隐式或显式的调用一次next函数即执行一次完整的递归。&lt;font color="purple"&gt;;-)&lt;/font&gt;&lt;/p&gt;
&lt;h3 id="yield-语句"&gt;yield 语句&lt;/h3&gt;
&lt;p&gt;yield的用法单独说一下是因为这个是理解上面的代码的关键，同时也是不好弄清楚的一个东西，&lt;a href="https://github.com/karottc/practice/blob/master/python/generator_20140705.py"&gt;这里&lt;/a&gt; 是一个关于yield的几行代码的使用例子。&lt;/p&gt;
&lt;p&gt;从概念上说，yield是包含在Python的生成器里面的，相关的概念定义如下： &amp;gt; 生成器是一种用普通的函数语法定义的迭代器。 &amp;gt; &amp;gt; 任何包含yield语句的函数成为生成器&lt;sup&gt;&lt;a href="#fnref:2" name="fnref:2"&gt;2&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;p&gt;用下面这段常见的Python来辅助说明：&lt;/p&gt;
&lt;div class="sourceCode"&gt;&lt;pre class="sourceCode python"&gt;&lt;code class="sourceCode python"&gt;&lt;span class="kw"&gt;def&lt;/span&gt; fab(&lt;span class="bu"&gt;max&lt;/span&gt;):
    a,b &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="dv"&gt;0&lt;/span&gt;,&lt;span class="dv"&gt;1&lt;/span&gt;
    i &lt;span class="op"&gt;=&lt;/span&gt; &lt;span class="dv"&gt;0&lt;/span&gt;
    &lt;span class="cf"&gt;while&lt;/span&gt; i &lt;span class="op"&gt;&amp;lt;&lt;/span&gt; &lt;span class="bu"&gt;max&lt;/span&gt;:
        &lt;span class="cf"&gt;yield&lt;/span&gt; a
        a,b &lt;span class="op"&gt;=&lt;/span&gt; b, a&lt;span class="op"&gt;+&lt;/span&gt;b
        i &lt;span class="op"&gt;+=&lt;/span&gt; &lt;span class="dv"&gt;1&lt;/span&gt;
f &lt;span class="op"&gt;=&lt;/span&gt; fab(&lt;span class="dv"&gt;5&lt;/span&gt;)
&lt;span class="bu"&gt;print&lt;/span&gt; f.&lt;span class="bu"&gt;next&lt;/span&gt;()  &lt;span class="co"&gt;# output: 0&lt;/span&gt;
&lt;span class="bu"&gt;print&lt;/span&gt; f.&lt;span class="bu"&gt;next&lt;/span&gt;()  &lt;span class="co"&gt;# output: 1&lt;/span&gt;
&lt;span class="bu"&gt;print&lt;/span&gt; f.&lt;span class="bu"&gt;next&lt;/span&gt;()  &lt;span class="co"&gt;# output: 1&lt;/span&gt;
&lt;span class="bu"&gt;print&lt;/span&gt; f.&lt;span class="bu"&gt;next&lt;/span&gt;()  &lt;span class="co"&gt;# output: 2&lt;/span&gt;

&lt;span class="cf"&gt;for&lt;/span&gt; i &lt;span class="kw"&gt;in&lt;/span&gt; fab(&lt;span class="dv"&gt;10&lt;/span&gt;):
    &lt;span class="bu"&gt;print&lt;/span&gt; i, &lt;span class="st"&gt;&amp;#39;,&amp;#39;&lt;/span&gt;,
&lt;span class="co"&gt;# output: 0 , 1 , 1 , 2 , 3 , 5 , 8 , 13 , 21 , 34 ,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;在上面的代码中，fab函数就是生成器，和普通的函数的区别在于：&lt;/p&gt;
&lt;ol type="1"&gt;
&lt;li&gt;不调用next方法，它不会自动执行；&lt;/li&gt;
&lt;li&gt;每次调用next方法时只执行到yield语句处，然后挂起，等待下一次next的调用；&lt;/li&gt;
&lt;li&gt;下一次调用next方法时，从yield的下一句开始执行，直到执行到yield语句，然后循环2-3的操作。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;上面代码中的输出情况就表明了这样的过程，对于上面的 &lt;code&gt;for&lt;/code&gt; 循环来说，&lt;code&gt;for&lt;/code&gt; 循环里面的函数是隐式调用了所有的next方法，生成了一个列表(list)，在for循环中的 &lt;code&gt;fab(10)&lt;/code&gt; 是和 &lt;code&gt;list(fab(10))&lt;/code&gt; 等价的，可以用 &lt;code&gt;print list(fab((10))&lt;/code&gt; 看输出结果加以验证。&lt;/p&gt;
&lt;h3 id="debug-上面代码"&gt;Debug 上面代码&lt;/h3&gt;
&lt;p&gt;如果觉得上面的代码很难理解，可以用单步执行的方式去跟踪和调试代码，同时使用 &lt;code&gt;print&lt;/code&gt; 大法也是很有效果的。关于 step by step 的工具，可以使用 PyCharm 或者 Eclipse + Pydev 这两个IDE，或者也可以使用 pdb 这个工具，pdb和gdb的使用命令没有多大差别，所以如果是常用gdb来调代码的话，用pdb是毫无障碍的，当然，用这些工具的时候可以适时的配合几句 &lt;code&gt;print&lt;/code&gt; 来会更好一些，上面三种，我个人还是推荐使用IDE（即PyCharm或者Pydev）,因为有些功能还是那些面向指令集的调试器（比如pdb）没法比的.&lt;/p&gt;
&lt;p&gt;通过单步跟踪之后，对yield的执行过程和上面的代码的递归调用栈应该就比较清楚了。&lt;/p&gt;
&lt;h3 id="高效的八皇后问题解法"&gt;高效的八皇后问题解法&lt;/h3&gt;
&lt;p&gt;这段代码是用C语言写的，用了语言特性的位操作等，所以比python的快很多，对于小于等于16个皇后来说，这段C代码的实现比上面15行的Python代码实现快了好几个数据量级。&lt;/p&gt;
&lt;p&gt;具体的代码请查看&lt;a href="https://github.com/karottc/practice/blob/master/python/eight_empress.c"&gt;这里&lt;/a&gt; : https://github.com/karottc/practice/blob/master/python/eight_empress.c .&lt;/p&gt;
&lt;p&gt;这是在我的机器上的运行时间的截图：&lt;/p&gt;
&lt;figure&gt;
&lt;img src="/static/images/201406/20140710_runtime.png" alt="runtime" /&gt;&lt;figcaption&gt;runtime&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;2014.07.10&lt;/p&gt;
&lt;h4 id="footnotes"&gt;Footnotes:&lt;/h4&gt;
&lt;p&gt;&lt;sup&gt;&lt;a href="#fnref:1" name="fnref:1"&gt;1&lt;/a&gt;&lt;/sup&gt; 这个问题的两处描述分别是&lt;a href="http://zh.wikipedia.org/wiki/%E5%85%AB%E7%9A%87%E5%90%8E%E9%97%AE%E9%A2%98"&gt;中文维基&lt;/a&gt; 和 &lt;a href="http://en.wikipedia.org/wiki/Eight_queens_puzzle"&gt;英文维基&lt;/a&gt;, 推荐看英文的，因为英文的更详尽，中文相比英文版的维基百科的内容太少，对这个问题的描述一半都不到。&lt;/p&gt;
&lt;p&gt;&lt;sup&gt;&lt;a href="#fnref:2" name="fnref:2"&gt;2&lt;/a&gt;&lt;/sup&gt; 引用自&lt;a href="http://book.douban.com/subject/4866934/"&gt;《Python基础教程（第二版）》&lt;/a&gt;。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:blog2.karottc.com,2014-07-01:/posts/2014-07-01-graduate-one-year/</id>
    <title type="html">写在毕业一周年之际</title>
    <published>2014-07-01T12:26:17Z</published>
    <updated>2014-07-01T12:26:17Z</updated>
    <link rel="alternate" href="http://blog2.karottc.com/posts/2014-07-01-graduate-one-year/"/>
    <content type="html">&lt;p&gt;今天是2014年7月1号，从毕业到正式工作刚刚一整年&lt;sup&gt;&lt;a href="#fnref:1" name="fnref:1"&gt;1&lt;/a&gt;&lt;/sup&gt;，这期间发生的事儿不多，可也不算少，或许值得写下来纪念一下。（ &lt;em&gt;未曾经历的感觉都值得记忆吧&lt;/em&gt; ）照例，还是先上图一张： &lt;img src="/static/images/201406/20140630_1_oneyear.png" alt="time one year" /&gt;&lt;/p&gt;
&lt;p&gt;毕业之后和以前最大的不同，可能算是经济独立了吧，虽然在大学的后半段因为实习的原因，经济也相对独立了，但是和毕业后还是有些不一样的。相对这个而言，独自一个人初到一个陌生的城市的孤独、落寞的五味成杂的感觉，这次却是一点没有，因为一年前的实习早就在另一个城市体验过了，有相对明确的目标+无惧于突然情况，这样就可以搞定大部分的不适和不安。&lt;/p&gt;
&lt;h3 id="工作"&gt;工作&lt;/h3&gt;
&lt;p&gt;工作上的事感觉没有太多要说的，就只能说说感觉了，现在的工作算是通信的，和以前是完全的不同体验，在学校的时候体验过传统企业系统的开发、android的pad和手机app开发、也在互联网的公司体验了一把。工作的时候去来搞了路由器相关的东西，这是和以前完全不同的体验，以前做的网站以及app之类的都是很上层的东西，而现在做的相对下层一点&lt;sup&gt;&lt;a href="#fnref:2" name="fnref:2"&gt;2&lt;/a&gt;&lt;/sup&gt;。所以这样还是学了一些新的东西，同时有些当年在《计算机网络》这个课上忽略和不懂的东西，现在也懂了一些，因为有实际的应用场景，所以这部分的知识接受程度比在学校高，同时在公司身边也有人可以实时的请教和交流，自然更加方便。&lt;/p&gt;
&lt;p&gt;此外还有一个绕不开的内容就是搭环境，我以为在这里就不用搞什么环境了，原来还是要弄的，只是不同的，以前是弄的LAMP的环境&lt;sup&gt;&lt;a href="#fnref:3" name="fnref:3"&gt;3&lt;/a&gt;&lt;/sup&gt;，现在搭的是硬件需要的调试和测试环境而已，不过这个体验还是不错的，因为我现在可以很熟练的做cable线头、网线头、电话线头和他们之间的对接以及他们和串口线的对接等等……这些现在看来很简单的东西，当时也是公司的前辈在实验室手把手教的，不过比较奇怪的是网线的线序，我在学校背了好几次都没怎么记住，老是忘记，在这里的时候给我讲了两遍，我就从此再没忘记过—— &lt;em&gt;好神奇的样子&lt;/em&gt; 。&lt;/p&gt;
&lt;p&gt;关于具体的技术，这不是本文的主题，不在这里扯淡。在公司我的RP值依然不高——从在公司年会上1/8的中奖率，我还是啥都没中。虽然是在意料之中，但还是有点微微失望，不过这么些年也习惯RP值不高的情况了，记得在中学的时候为了应对可能路上的突发情况(比如自行车出了啥问题)，我都会比正常的出门时间提前半个小时走(直接结果就是每天到学校都很早吖，给人感觉就是我很勤奋，虽然我真的是很勤奋，但不是体现在这里啦)，做计划时候也都会有plan B——运气之差，可见一斑。&lt;/p&gt;
&lt;h3 id="生活"&gt;生活&lt;/h3&gt;
&lt;p&gt;虽然是在一个陌生的城市，但是饮食没有啥不习惯的，找房子也挺顺利，所以在这些物质基础方面基本没有啥问题，而一起合租的都是大学的同班同学，都完全不用磨合，利用很多个周末的时间，把附近的餐馆都吃的差不多了(以住的地方的地铁站为中心，上下各延伸一个地铁站的距离)。不过生活总是充满变数，年轻的我们又如何能安于现状，在回家过年后有个兄弟就决定要去追求他想要的生活，最后在三月底踏上了西安的土地，也许在那里他能找到一些属于他的答案。这种离别的时候怎能没有装B的情怀，所以我当时附上了东拼西凑的小词一首：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一杯别酒，踌躇满志，肆言妄笑天下陋。纵知前途千万险，轻别离，未来风雨绸缪。想多少年后，沉浮事久，夜思少年愁，将叹有月如钩。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在工作一个多月以后，我决定去学吉他，当时的想法就是，玩音乐可以释放压抑的情绪，同时也很羡慕和向往那种背着吉他去流浪的生活，只是让我选的话，我可能还是不会选择背着几天去流浪的生活，趁着刚好9月份深大开学了，所以就去深大的一个自发的吉他社团混了半年，学了点基本东西，剩下的就是不停的反复练习和反复琢磨了，重点还是要坚持练习，顺便附上一张当时的照片： &lt;img src="/static/images/201406/20140630_2_guitar.png" alt="guitar" /&gt; 虽然通过这个事我发现我确实没有什么音乐细胞，不过还是会抽空拿出来玩一玩，我也能切实感觉到对我情绪的调节作用，哈哈！&lt;/p&gt;
&lt;p&gt;在去年10.1的时候去广州、佛山转了一圈，一共花了5天时间，也可以算是一场说走就走的旅行，因为是9月30号晚上临时决定明天去这样转一圈，不过因为从来没有一个人出去旅行玩过，而且这么临时的决定和匆忙，所以慢慢有点胆怯了，就不想去了，晚上在和大学同寝室的哥们说到这个事儿的时候，在他的刺激和说服之下，我还是决心明天出去的计划不变，因为有些事总需要去经历、去体验。当然这个过程和结果都是相当不错的，不过我又有点担心会慢慢喜欢上一个人的感觉…(￣◇￣;),同时在广州的时候也顺便见了一个特地从上海来广州看他媳妇儿的大学的哥们，生活就是如此美好吖。&lt;/p&gt;
&lt;p&gt;在刚来深圳的那段时间，我还买了文房四宝，准备练习书法来着，写了一个月的样子，后面在我学习吉他以后就把书法放弃了，因为我更愿意把练习书法的时间也用来练习吉他。前两个月，我在公司找了一个师傅教我打乒乓球，不过我想更多的是算亦师亦友的关系，想来生活中还是藏着好些美好的事物。&lt;/p&gt;
&lt;h3 id="看书"&gt;看书&lt;/h3&gt;
&lt;p&gt;这一年虽然看书不多，但也还是在坚持看书。下面按时间顺序说一下看的书&lt;sup&gt;&lt;a href="#fnref:4" name="fnref:4"&gt;4&lt;/a&gt;&lt;/sup&gt;，从毕业之后，终于把搁置了很久的《黑客与画家》看了，看这本书就用了2个月，后面还会再看一遍，因为通过这本书，我也更新了我的一些认识，比如对语言的偏见和数学对编程人员的重要性以及掌握程度的认识，这些东西一直困扰我，在这本书里面，我都找到了答案。之后用了一个月的时间看了《专业主义》，这也是一本更新了我知识体系和内容的书。&lt;/p&gt;
&lt;ol type="1"&gt;
&lt;li&gt;《下班后的黄金8小时》：这本属于畅销书，看着玩的，有些收获，但并不是很适合我；&lt;/li&gt;
&lt;li&gt;《看见》：柴静的这本，看看还可以吧，我是在国庆节旅行途中看的这本，没看完，后面回来之后又接着看了半个月。&lt;/li&gt;
&lt;li&gt;《计算机网络》：这本是专业书，因为工作的需要，算是复习一下大学中的计算机网络的课程相关内容；&lt;/li&gt;
&lt;li&gt;《TCP/IP详解·卷一》：这个看一遍可以在脑袋里面建立一个索引和一些概念，在以后用到时候再来查阅；&lt;/li&gt;
&lt;li&gt;《失控》：这本书我花了两个月时间看完，但是却很多消化不了，还是需要再来一遍；&lt;/li&gt;
&lt;li&gt;《千万别学英语》、《你还在学英语吗》、《人人都能用英语》、《把你的英语用起来》、《考拉小巫的英语学习日记》：这些都是学英语方法论的书，不能让英语成为障碍，所以要把英语水平提高一些，这些书，感觉有价值的是人人都能用英语》、《把你的英语用起来》这两本；&lt;/li&gt;
&lt;li&gt;《武侠，从牛A到牛C》：这本书是用来调节脑袋的，花了2天时间看完，分析那些金庸小说的人物还是挺有意思的，看着玩还是可以的；&lt;/li&gt;
&lt;li&gt;《思考，快与慢》：思维类的畅销书；&lt;/li&gt;
&lt;li&gt;《一键下单》：亚马逊的传记；&lt;/li&gt;
&lt;li&gt;《Big Data：大数据时代》、《大数据云图》、《大连接：社会网络是如何形成的以及对人类现实行为的影响》、《数据之美》：当时思维处于波动时期，在想要不要大数据分析类的工作，所以看了一些；&lt;/li&gt;
&lt;li&gt;《深入浅出数据分析》、《谁说菜鸟不会数据分析 _入门篇》：跟上面同样的理由，后面这本书倒是让我学会了一些excel的用法；&lt;/li&gt;
&lt;li&gt;《谁的青春不迷茫》：同样是在上面的迷茫时期看的书；&lt;/li&gt;
&lt;li&gt;《MacTalk·人生元编程》：类似于blog合集，没多少有用的东西；&lt;/li&gt;
&lt;li&gt;《易中天中华史·总序+祖先》：易中天还是比较喜欢的历史学家，虽然书里面的内容有些部分有些牵强，但还是可以看看；&lt;/li&gt;
&lt;li&gt;《代码的未来》：这本书看着玩就好了；&lt;/li&gt;
&lt;li&gt;《码农：1-12》：图灵社区出的杂志，就当作杂志看好了，我比较关注每期的人物专访部分。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;毕业这一年好像发生了挺多事的，仔细回忆一下，好像也没有多少，这里就算竹子的一小节吧！因为很多时候不知前路要怎么走，但依然需要向前走，因为，已不能回头。&lt;/p&gt;
&lt;p&gt;2014.07.01&lt;/p&gt;
&lt;h4 id="footnotes"&gt;Footnotes:&lt;/h4&gt;
&lt;p&gt;&lt;sup&gt;&lt;a href="#fnref:1" name="fnref:1"&gt;1&lt;/a&gt;&lt;/sup&gt; 2013年7月1号正式开始上班，还记得当时选择7月1号是因为刚刚那天是星期1，我一看正好吖，于是就定了这个时间,提前两天来到深圳，1号正式开始工作。&lt;/p&gt;
&lt;p&gt;&lt;sup&gt;&lt;a href="#fnref:2" name="fnref:2"&gt;2&lt;/a&gt;&lt;/sup&gt; 从5层网络模型来说，现在做的最高也只到三层，有时也搞二层(链路层)的东西。&lt;/p&gt;
&lt;p&gt;&lt;sup&gt;&lt;a href="#fnref:3" name="fnref:3"&gt;3&lt;/a&gt;&lt;/sup&gt; LAMP环境的搭建，可以参见&lt;a href="http://www.cnblogs.com/karotte/archive/2012/08/12/install_lamp.html"&gt;这篇blog&lt;/a&gt;: http://www.cnblogs.com/karotte/archive/2012/08/12/install_lamp.html 。&lt;/p&gt;
&lt;p&gt;&lt;sup&gt;&lt;a href="#fnref:4" name="fnref:4"&gt;4&lt;/a&gt;&lt;/sup&gt; 我看过的都会在豆瓣上列出来，具体可以看&lt;a href="http://book.douban.com/people/karottc/collect"&gt;这里&lt;/a&gt;: http://book.douban.com/people/karottc/collect 。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:blog2.karottc.com,2014-06-15:/posts/2014-06-15-current-doing/</id>
    <title type="html">开启GitHub模式，now!</title>
    <published>2014-06-15T12:26:17Z</published>
    <updated>2014-06-15T12:26:17Z</updated>
    <link rel="alternate" href="http://blog2.karottc.com/posts/2014-06-15-current-doing/"/>
    <content type="html">&lt;p&gt;最近看到了一篇&lt;a href="http://ryanseys.com/blog/177-days-of-github/"&gt;文章&lt;/a&gt;,该文章的作者将自己连续177天在github上commit东西的经历和经验分享了出来，我觉得这样挺有意思，所以我也准备做一个尝试，看看自己能坚持不间断的在github上commit新的东西多少天。正如作者所说，坚持这样做一次，总能发现和学到一些前所未有的东西。所以我在IM上问了下这货–&lt;a href="https://github.com/cocal"&gt;cocal&lt;/a&gt;，他立即表示这很好，所以决定 &lt;strong&gt;Challenge Accept!&lt;/strong&gt; 看情况，他这两天正好可以搞定他买的VPS，所从今天开始算做第一天。&lt;/p&gt;
&lt;p&gt;这个对于我们两个来说都是一件有挑战的事儿，为了让这个事变的更有意义和公平一点，我们约定了以下几个简单的规则：&lt;/p&gt;
&lt;ol type="1"&gt;
&lt;li&gt;仅仅是对README文件的编辑的commit不算有效的更新；&lt;/li&gt;
&lt;li&gt;禁止使用脚本自动编辑，所有的提交的更新都必须是自己手动完成；&lt;/li&gt;
&lt;li&gt;禁止提交搞笑的无关程序逻辑之类的更新。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在此之前，我在github的连续天数是两天，当然，也没有什么有意义的代码，好像都是垃圾。所以现在开始尽量让垃圾少一些，做多些有意义的和有用的commit，也可以算作是一个网络备份和备忘吧。:-).&lt;/p&gt;
&lt;h3 id="linux-0.11-注释"&gt;linux-0.11 注释&lt;/h3&gt;
&lt;p&gt;目前我正在给Linux-0.11版本的内核增加注释，项目在&lt;a href="https://github.com/karottc/linux-0.11"&gt;这里&lt;/a&gt;。我对整个Linux内核有兴趣的部分是kernel、网络(TCP/IP协议栈，linux-0.11版本还没有网络功能)、内存管理、文件系统、进程调度。驱动部分现在还暂时不会去涉及它。&lt;/p&gt;
&lt;figure&gt;
&lt;img src="/static/images/201406/20140615_1_linux11.png" alt="linux-0.11注释项目" /&gt;&lt;figcaption&gt;linux-0.11注释项目&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;现在市面上最新(3.x的版本)的和最流行的(2.6.x版本)几种版本的代码都是非常大的，一开始直接看会显得力不从心，虽然有很多讲内核解释的书，但总没有linux最原始的版本看着容易理解。我最初以为把书上的注释搬运到代码中一件挺快的事，结果做到现在发现，一点也不轻松，还是相当耗精力的(难道是我太认真了？？..[偷笑]..)。干这件事好像可以在没有新想法和项目来写的时候继续往github上commit东西。尽管如此，我还是想尽快把这个搞定，人总得逼自己一把！&lt;/p&gt;
&lt;h3 id="工具"&gt;工具&lt;/h3&gt;
&lt;p&gt;目前我用的shell和编辑器是zsh + VIM 组合，这两个东西配置网上已经不计其数了，这里不再赘述。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我的shell是&lt;a href="https://github.com/karottc/oh-my-zsh"&gt;这个&lt;/a&gt;，同样是来源于那个厉害的 &lt;a href="https://github.com/robbyrussell/oh-my-zsh"&gt;oh-my-zsh&lt;/a&gt;,我fork过来以后做了一点根据自己习惯的小小的调整。&lt;/li&gt;
&lt;li&gt;我的VIM的配置在&lt;a href="https://github.com/karottc/vim-configure"&gt;这里&lt;/a&gt;，从最初的东拼西凑到现在差不多已经有了自己的习惯，然后逐步的扩展，或许以后满足不了的时候就自己动手写VIM的插件(&lt;em&gt;This is a goal!&lt;/em&gt;)。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还有一些GUI的工具，就不在这里列出来了。&lt;/p&gt;
&lt;h3 id="github-pages"&gt;Github pages&lt;/h3&gt;
&lt;p&gt;这里还要提一下用 Github pages 建立blog和绑定域名的事儿，当然这类东西网上的手把手的教程已经非常多了，这里不详述了，主要记录一点我碰到的觉得有用的东西。&lt;/p&gt;
&lt;p&gt;原来自己这么久一直搞错了一个概念，我一直以为 &lt;em&gt;www.xxx.com&lt;/em&gt; 就算顶级域名了，结果它应该算二级域名，而 &lt;em&gt;xxx.com&lt;/em&gt; 才算是顶级域名，这一点在购买域名商那里配置DNS的时候是可以发现。然后用 &lt;code&gt;dig&lt;/code&gt; 这个命令也可以看出来：&lt;/p&gt;
&lt;figure&gt;
&lt;img src="/static/images/201406/20140615_2_domain.png" alt="karott.com" /&gt;&lt;figcaption&gt;karott.com&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;figure&gt;
&lt;img src="/static/images/201406/20140615_3_domain.png" alt="www.karott.com" /&gt;&lt;figcaption&gt;www.karott.com&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;p&gt;上面是以我自己的域名 &lt;em&gt;karottc.com&lt;/em&gt; 做的一个例子即可看到。&lt;/p&gt;
&lt;p&gt;下面说一下我在搞 github pages 碰到的一个问题:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;问题描述：我在 commit 和 push 一个初始版本之后，通过 username.github.com.io/blogs 也能访问。然后我又继续添加文章，并做了一些小的页面布局、配置这类的调整，然后再 push 到 github 上，这是再通过 username.github.com.io/blogs 去访问还是第一次的样子，新加的东西完全没有？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;碰到这个问题当时非常抓狂吖，无论怎么修改然后 push ，新加的东西就是不出现在页面上。最后经过排查(我也不知道为啥当时突然就注意到了)，文件编写的有问题，jekyll 不能 build 成功，所以就一直沿用的第一次的样子，这种问题是会报错的，出错信息在项目的设置里面(不知道这点根本发现不了吖)，build失败的出错信息显示的位置比较隐晦，可以这样进入，如图： &lt;img src="/static/images/201406/20140615_4_github.png" alt="Github" /&gt; 点击红色部分的 &lt;em&gt;setting&lt;/em&gt;，然后进入如图： &lt;img src="/static/images/201406/20140615_5_github.png" alt="warning" /&gt; build 出错的信息会出现上图红色部分，图中是没有错误的情况下的正确显示。&lt;/p&gt;
&lt;p&gt;这个问题真是调了很久，让人很抓狂啊，当时新建了好多个 github pages 专门来测试这个，不过现在再来建 github pages 已经驾轻就熟了，哈哈——花时间总是有收获的！！ &lt;strong&gt;Good luck !&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id="背景"&gt;背景&lt;/h3&gt;
&lt;p&gt;我差不多一年都没有写过 blog 了，也就是从去年毕业以后就到现在都没有写，不知道是因为太安逸(生活上)了还是因为太不确定(思想上)了，又或者兼而有之，感觉过的浑浑噩噩，准确的说更像是一种温水煮青蛙的感觉吧，所以这样下去怎么行，我可是有理想有追求的好少年，必须要从温水里跳出来，让以前的事(好的、坏的、得瑟的、悲伤的)随&lt;a href="http://www.karottc.com/blog/2014/06/14/former-life/"&gt;前世档案&lt;/a&gt;一起尘封，然后清空自己，重新开始 —— &lt;em&gt;stay hungry, stay foolish!&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;好吧，其实的情况是，这么些时间想通了一些问题，在自己的路上坚持走下去(保持思想上的稳定性真是非常重要吖)。从毕业到现在虽然没写东西，但是还是在坚持看书,&lt;a href="http://book.douban.com/people/karottc/collect"&gt;这里是&lt;/a&gt;我看过的书的不完全书单，刚刚扫了一眼，那个list里面好像有营养的书很少(..[汗]..) (￣◇￣;)。就把这些书当作看专业书之余的甜点好了。&lt;/p&gt;
&lt;p&gt;2014.06.15&lt;/p&gt;
</content>
  </entry>
  <entry>
    <id>tag:blog2.karottc.com,2014-06-14:/posts/2014-06-14-former-life/</id>
    <title type="html">前世档案 | karottc的blog</title>
    <published>2014-06-14T12:26:17Z</published>
    <updated>2014-06-14T12:26:17Z</updated>
    <link rel="alternate" href="http://blog2.karottc.com/posts/2014-06-14-former-life/"/>
    <content type="html">&lt;p&gt;上一个写blog的地方是在&lt;a href="http://www.cnblogs.com/karotte/"&gt;博客园&lt;/a&gt;,算是学生时代的一点记录。&lt;/p&gt;
&lt;h3 id="简史"&gt;简史&lt;/h3&gt;
&lt;p&gt;2011年11月，我的第一篇blog：&lt;a href="http://blog.csdn.net/karotte/article/details/6990031"&gt;Emacs配置成C/C++的IDE&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;然后写了两篇跟技术沾边也算不沾边的blog：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.cnblogs.com/karotte/archive/2012/08/12/install_lamp.html"&gt;无roo权限时LAMP环境的搭建&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cnblogs.com/karotte/archive/2013/03/16/ssh2vmware.html"&gt;secureCRT登录VMware进行开发&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.cnblogs.com/karotte/archive/2013/03/24/vmware-ping.html"&gt;VMware中的linux能上网不能ping通的可能偏方一&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然还有吐槽学校生活的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;比如吐槽实习的，&lt;a href="http://www.cnblogs.com/karotte/archive/2012/07/31/2616643.html"&gt;坑爹的重庆实习&lt;/a&gt;&lt;sup&gt;&lt;a href="#fn:1" name="fnref:1"&gt;1&lt;/a&gt;&lt;/sup&gt;.&lt;/li&gt;
&lt;li&gt;吐槽专业的氛围的，&lt;a href="http://www.cnblogs.com/karotte/archive/2012/06/17/impetuous_colloge.html"&gt;软件工程这个专业 - 唉..&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自然还有对学校生活和实习经历的一些想法，&lt;a href="http://www.cnblogs.com/karotte/category/388927.html"&gt;戳这里&lt;/a&gt;.&lt;/p&gt;
&lt;h5 id="附注"&gt;附注&lt;/h5&gt;
&lt;p&gt;如果对我的名字感兴趣，可以看看&lt;a href="http://karottc.is-programmer.com/posts/37508.html"&gt;这里&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;最后引用当年数据结构课程结束是老师给的一句话和一幅图作为本文的结束：&lt;/p&gt;
&lt;figure&gt;
&lt;img src="/static/images/201406/20140614_2_life_is_new_start.png" alt="life is new" /&gt;&lt;figcaption&gt;life is new&lt;/figcaption&gt;
&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;Life is full of new beginnings - May this be one of your happiest ever !!!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id="footnotes"&gt;Footnotes:&lt;/h4&gt;
&lt;p&gt;&lt;sup&gt;&lt;a href="#fnref:1" name="fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt; 这个文章是吐槽中软的坑爹的安排的，然后博客园将它从首页移除了，同时给我发了一个通知，所以我怀疑中软是不是还是和博客园有些利益联系。&lt;/p&gt;
</content>
  </entry>
</feed>

